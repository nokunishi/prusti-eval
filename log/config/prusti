allow_unreachable_unsupported_code=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

assert_timeout=Value {
    origin: None,
    kind: I64(
        10000,
    ),
}

be_rustc=Value {
    origin: Some(
        "the environment",
    ),
    kind: Boolean(
        false,
    ),
}

boogie_path=Value {
    origin: None,
    kind: Nil,
}

cache_path=Value {
    origin: Some(
        "the environment",
    ),
    kind: String(
        "target/verify/cache.bin",
    ),
}

cargo_command=Value {
    origin: None,
    kind: String(
        "check",
    ),
}

cargo_path=Value {
    origin: None,
    kind: String(
        "cargo",
    ),
}

check_foldunfold_state=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

check_no_drops=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

check_overflows=Value {
    origin: None,
    kind: Boolean(
        true,
    ),
}

check_panics=Value {
    origin: None,
    kind: Boolean(
        true,
    ),
}

check_timeout=Value {
    origin: None,
    kind: Nil,
}

counterexample=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

delete_basic_blocks=Value {
    origin: None,
    kind: Array(
        [],
    ),
}

disable_name_mangling=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

dump_borrowck_info=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

dump_debug_info=Value {
    origin: Some(
        "the environment",
    ),
    kind: Boolean(
        true,
    ),
}

dump_debug_info_during_fold=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

dump_fold_unfold_state_of_blocks=Value {
    origin: None,
    kind: Nil,
}

dump_nll_facts=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

dump_path_ctxt_in_debug_info=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

dump_reborrowing_dag_in_debug_info=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

dump_viper_program=Value {
    origin: Some(
        "the environment",
    ),
    kind: Boolean(
        true,
    ),
}

enable_cache=Value {
    origin: None,
    kind: Boolean(
        true,
    ),
}

enable_purification_optimization=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

enable_type_invariants=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

enable_verify_only_basic_block_path=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

encode_bitvectors=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

encode_unsigned_num_constraint=Value {
    origin: None,
    kind: Boolean(
        true,
    ),
}

execute_only_failing_trace=Value {
    origin: None,
    kind: Nil,
}

extra_jvm_args=Value {
    origin: None,
    kind: Array(
        [],
    ),
}

extra_verifier_args=Value {
    origin: None,
    kind: Array(
        [],
    ),
}

foldunfold_state_filter=Value {
    origin: None,
    kind: String(
        "",
    ),
}

full_compilation=Value {
    origin: Some(
        "the environment",
    ),
    kind: String(
        "true",
    ),
}

hide_uuids=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

ignore_regions=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

inline_caller_for=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

intern_names=Value {
    origin: None,
    kind: Boolean(
        true,
    ),
}

internal_errors_as_warnings=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

java_home=Value {
    origin: Some(
        "the environment",
    ),
    kind: String(
        "/usr/local/Cellar/openjdk/21/libexec/openjdk.jdk/Contents/Home",
    ),
}

json_communication=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

log=Value {
    origin: None,
    kind: String(
        "",
    ),
}

log_dir=Value {
    origin: Some(
        "the environment",
    ),
    kind: String(
        "/Users/hatsusaiokunishi/UBC/2023/cs448/source/prusti-eval/log",
    ),
}

log_smt_wrapper_interaction=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

log_style=Value {
    origin: None,
    kind: String(
        "auto",
    ),
}

log_tracing=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

max_log_file_name_length=Value {
    origin: None,
    kind: I64(
        60,
    ),
}

min_prusti_version=Value {
    origin: None,
    kind: Nil,
}

no_verify=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

no_verify_deps=Value {
    origin: Some(
        "the environment",
    ),
    kind: Boolean(
        false,
    ),
}

num_errors_per_function=Value {
    origin: None,
    kind: I64(
        1,
    ),
}

number_of_parallel_verifiers=Value {
    origin: None,
    kind: Nil,
}

opt_in_verification=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

optimizations=Value {
    origin: None,
    kind: String(
        "all",
    ),
}

preserve_smt_trace_files=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

print_collected_verification_items=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

print_counterexample_if_model_is_present=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

print_desugared_specs=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

print_hash=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

print_typeckd_specs=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

quiet=Value {
    origin: Some(
        "the environment",
    ),
    kind: String(
        "true",
    ),
}

save_failing_trace_to_file=Value {
    origin: None,
    kind: Nil,
}

simplify_encoding=Value {
    origin: None,
    kind: Boolean(
        true,
    ),
}

skip_unsupported_features=Value {
    origin: Some(
        "the environment",
    ),
    kind: Boolean(
        true,
    ),
}

smt_qi_bound_global=Value {
    origin: None,
    kind: Nil,
}

smt_qi_bound_global_kind=Value {
    origin: None,
    kind: Nil,
}

smt_qi_bound_trace=Value {
    origin: None,
    kind: Nil,
}

smt_qi_bound_trace_kind=Value {
    origin: None,
    kind: Nil,
}

smt_qi_eager_threshold=Value {
    origin: None,
    kind: I64(
        1000,
    ),
}

smt_qi_ignore_builtin=Value {
    origin: None,
    kind: Boolean(
        true,
    ),
}

smt_solver_path=Value {
    origin: Some(
        "the environment",
    ),
    kind: String(
        "/Users/hatsusaiokunishi/UBC/2023/cs448/source/prusti-eval/viper_tools/z3/bin/z3",
    ),
}

smt_solver_wrapper_path=Value {
    origin: Some(
        "the environment",
    ),
    kind: String(
        "/Users/hatsusaiokunishi/UBC/2023/cs448/source/prusti-eval/target/debug/prusti-release-macos/prusti-smt-solver",
    ),
}

smt_unique_triggers_bound=Value {
    origin: None,
    kind: Nil,
}

smt_unique_triggers_bound_total=Value {
    origin: None,
    kind: Nil,
}

unsafe_core_proof=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

use_eval_axioms=Value {
    origin: None,
    kind: Boolean(
        true,
    ),
}

use_more_complete_exhale=Value {
    origin: None,
    kind: Boolean(
        true,
    ),
}

use_new_encoder=Value {
    origin: None,
    kind: Boolean(
        true,
    ),
}

use_smt_wrapper=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

verification_deadline=Value {
    origin: None,
    kind: Nil,
}

verify_core_proof=Value {
    origin: None,
    kind: Boolean(
        true,
    ),
}

verify_only_basic_block_path=Value {
    origin: None,
    kind: Array(
        [],
    ),
}

verify_only_preamble=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

verify_specifications=Value {
    origin: None,
    kind: Boolean(
        true,
    ),
}

verify_specifications_backend=Value {
    origin: None,
    kind: String(
        "Silicon",
    ),
}

verify_specifications_with_core_proof=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

verify_types=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}

viper_backend=Value {
    origin: None,
    kind: String(
        "Silicon",
    ),
}

viper_home=Value {
    origin: Some(
        "the environment",
    ),
    kind: String(
        "/Users/hatsusaiokunishi/UBC/2023/cs448/source/prusti-eval/target/debug/prusti-release-macos/../../../viper_tools/backends",
    ),
}

write_smt_statistics=Value {
    origin: None,
    kind: Boolean(
        false,
    ),
}