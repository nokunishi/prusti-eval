digraph CFG {
graph [fontname=monospace];
node [fontname=monospace];
edge [fontname=monospace];
labelloc="t";
label="Method m_specialized$$pclmulqdq$$reduce128";
"block_start" [shape=none,label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center">start (cfg:0)</td></tr><tr><td align="left" balign="left"><font color="orange">// ========== start ==========</font><br/><font color="orange">// Def path: "crc32fast::specialized::pclmulqdq::reduce128"</font><br/><font color="orange">// Span: src/specialized/pclmulqdq.rs:192:1: 196:2 (#0)</font><br/>__t0 := copy false<br/>__t1 := copy false<br/>__t2 := copy false<br/>__t3 := copy false<br/>__t4 := copy false<br/><font color="orange">// Preconditions:</font><br/>inhale (acc(struct$m_std$$arch$$x86_64$$__m128i(_1), write)) &amp;&amp; ((acc(struct$m_std$$arch$$x86_64$$__m128i(_2), write)) &amp; \ <br/>    &amp; ((acc(struct$m_std$$arch$$x86_64$$__m128i(_3), write)) &amp;&amp; (true)))<br/>inhale (true) &amp;&amp; ((true) &amp;&amp; ((true) &amp;&amp; (true)))<br/>label pre<br/><font color="orange">// ========== bb0 ==========</font><br/>__t0 := copy true<br/><font color="orange">// [mir] StorageLive(_4)</font><br/><font color="orange">// [mir] StorageLive(_5)</font><br/><font color="orange">// [mir] _5 = _1</font><br/>_5 := builtin$havoc_ref()<br/>inhale acc(struct$m_std$$arch$$x86_64$$__m128i(_5), write)<br/>inhale (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i)&gt;(_1)) == (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i \ <br/>    )&gt;(_5))<br/>label l0<br/><font color="orange">// [mir] StorageLive(_6)</font><br/><font color="orange">// [mir] _6 = _3</font><br/>_6 := builtin$havoc_ref()<br/>inhale acc(struct$m_std$$arch$$x86_64$$__m128i(_6), write)<br/>inhale (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i)&gt;(_3)) == (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i \ <br/>    )&gt;(_6))<br/>label l1<br/><font color="orange">// [mir] _4 = std::arch::x86_64::_mm_clmulepi64_si128::&lt;0&gt;(move _5, move _6) -&gt; [return: bb1, unwind: bb5]</font><br/>label l2<br/>assert (true) &amp;&amp; ((true) &amp;&amp; (true))<br/>exhale (acc(struct$m_std$$arch$$x86_64$$__m128i(_5), write)) &amp;&amp; ((acc(struct$m_std$$arch$$x86_64$$__m128i(_6), write)) &amp; \ <br/>    &amp; (true))<br/>_4 := builtin$havoc_ref()<br/>inhale acc(struct$m_std$$arch$$x86_64$$__m128i(_4), write)<br/>inhale (true) &amp;&amp; (true)<br/>label l3<br/><font color="orange">// ========== bb1 ==========</font><br/>__t1 := copy true<br/><font color="orange">// [mir] StorageDead(_6)</font><br/><font color="orange">// [mir] StorageDead(_5)</font><br/><font color="orange">// [mir] FakeRead(ForLet(None), _4)</font><br/><font color="orange">// [mir] StorageLive(_7)</font><br/><font color="orange">// [mir] StorageLive(_8)</font><br/><font color="orange">// [mir] _8 = _1</font><br/>_8 := builtin$havoc_ref()<br/>inhale acc(struct$m_std$$arch$$x86_64$$__m128i(_8), write)<br/>inhale (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i)&gt;(_1)) == (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i \ <br/>    )&gt;(_8))<br/>label l4<br/><font color="orange">// [mir] StorageLive(_9)</font><br/><font color="orange">// [mir] _9 = _3</font><br/>_9 := builtin$havoc_ref()<br/>inhale acc(struct$m_std$$arch$$x86_64$$__m128i(_9), write)<br/>inhale (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i)&gt;(_3)) == (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i \ <br/>    )&gt;(_9))<br/>label l5<br/><font color="orange">// [mir] _7 = std::arch::x86_64::_mm_clmulepi64_si128::&lt;17&gt;(move _8, move _9) -&gt; [return: bb2, unwind: bb5]</font><br/>label l6<br/>assert (true) &amp;&amp; ((true) &amp;&amp; (true))<br/>exhale (acc(struct$m_std$$arch$$x86_64$$__m128i(_8), write)) &amp;&amp; ((acc(struct$m_std$$arch$$x86_64$$__m128i(_9), write)) &amp; \ <br/>    &amp; (true))<br/>_7 := builtin$havoc_ref()<br/>inhale acc(struct$m_std$$arch$$x86_64$$__m128i(_7), write)<br/>inhale (true) &amp;&amp; (true)<br/>label l7<br/><font color="orange">// ========== bb2 ==========</font><br/>__t2 := copy true<br/><font color="orange">// [mir] StorageDead(_9)</font><br/><font color="orange">// [mir] StorageDead(_8)</font><br/><font color="orange">// [mir] FakeRead(ForLet(None), _7)</font><br/><font color="orange">// [mir] StorageLive(_10)</font><br/><font color="orange">// [mir] StorageLive(_11)</font><br/><font color="orange">// [mir] _11 = _2</font><br/>_11 := builtin$havoc_ref()<br/>inhale acc(struct$m_std$$arch$$x86_64$$__m128i(_11), write)<br/>inhale (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i)&gt;(_2)) == (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i \ <br/>    )&gt;(_11))<br/>label l8<br/><font color="orange">// [mir] StorageLive(_12)</font><br/><font color="orange">// [mir] _12 = _4</font><br/>_12 := builtin$havoc_ref()<br/>inhale acc(struct$m_std$$arch$$x86_64$$__m128i(_12), write)<br/>inhale (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i)&gt;(_4)) == (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i \ <br/>    )&gt;(_12))<br/>label l9<br/><font color="orange">// [mir] _10 = std::arch::x86_64::_mm_xor_si128(move _11, move _12) -&gt; [return: bb3, unwind: bb5]</font><br/>label l10<br/>assert (true) &amp;&amp; ((true) &amp;&amp; (true))<br/>exhale (acc(struct$m_std$$arch$$x86_64$$__m128i(_11), write)) &amp;&amp; ((acc(struct$m_std$$arch$$x86_64$$__m128i(_12), write)) \ <br/>     &amp;&amp; (true))<br/>_10 := builtin$havoc_ref()<br/>inhale acc(struct$m_std$$arch$$x86_64$$__m128i(_10), write)<br/>inhale (true) &amp;&amp; (true)<br/>label l11<br/><font color="orange">// ========== bb3 ==========</font><br/>__t3 := copy true<br/><font color="orange">// [mir] StorageDead(_12)</font><br/><font color="orange">// [mir] StorageDead(_11)</font><br/><font color="orange">// [mir] StorageLive(_13)</font><br/><font color="orange">// [mir] _13 = _7</font><br/>_13 := builtin$havoc_ref()<br/>inhale acc(struct$m_std$$arch$$x86_64$$__m128i(_13), write)<br/>inhale (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i)&gt;(_7)) == (snap$&lt;Snapshot(struct$m_std$$arch$$x86_64$$__m128i \ <br/>    )&gt;(_13))<br/>label l12<br/><font color="orange">// [mir] _0 = std::arch::x86_64::_mm_xor_si128(move _10, move _13) -&gt; [return: bb4, unwind: bb5]</font><br/>label l13<br/>assert (true) &amp;&amp; ((true) &amp;&amp; (true))<br/>exhale (acc(struct$m_std$$arch$$x86_64$$__m128i(_10), write)) &amp;&amp; ((acc(struct$m_std$$arch$$x86_64$$__m128i(_13), write)) \ <br/>     &amp;&amp; (true))<br/>_0 := builtin$havoc_ref()<br/>inhale acc(struct$m_std$$arch$$x86_64$$__m128i(_0), write)<br/>inhale (true) &amp;&amp; (true)<br/>label l14<br/><font color="orange">// ========== bb4 ==========</font><br/>__t4 := copy true<br/><font color="orange">// [mir] StorageDead(_13)</font><br/><font color="orange">// [mir] StorageDead(_10)</font><br/><font color="orange">// [mir] StorageDead(_7)</font><br/><font color="orange">// [mir] StorageDead(_4)</font><br/><font color="orange">// [mir] return</font><br/><font color="orange">// ========== return ==========</font><br/><font color="orange">// Target of any 'return' statement.</font><br/><font color="orange">// Exhale postcondition</font><br/>label l16<br/><font color="orange">// Fold predicates for &amp;mut args and transfer borrow permissions to old</font><br/><font color="orange">// Fold the result</font><br/>obtain acc(struct$m_std$$arch$$x86_64$$__m128i(_0), write)<br/><font color="orange">// Assert possible strengthening</font><br/><font color="orange">// Assert functional specification of postcondition</font><br/><font color="orange">// Assert type invariants</font><br/>assert (true) &amp;&amp; (true)<br/><font color="orange">// Exhale permissions of postcondition (1/3)</font><br/><font color="orange">// Exhale permissions of postcondition (2/3)</font><br/>exhale acc(struct$m_std$$arch$$x86_64$$__m128i(_0), write)<br/><font color="orange">// Exhale permissions of postcondition (3/3)</font></td></tr><tr><td align="left" bgcolor="#82CA9D">Return<br/></td></tr></table>>];
}
