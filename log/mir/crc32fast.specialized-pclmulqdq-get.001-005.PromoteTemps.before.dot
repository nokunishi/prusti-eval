digraph Mir_0_79 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn specialized::pclmulqdq::get(_1: &amp;ReErased mut &amp;ReErased [u8]) -&gt; Adt(std::arch::x86_64::__m128i, [])<br align="left"/>let mut _2: !;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: usize;<br align="left"/>let mut _8: &amp;ReErased [u8];<br align="left"/>let mut _9: !;<br align="left"/>let _10: Adt(std::arch::x86_64::__m128i, []);<br align="left"/>let mut _11: *const Adt(std::arch::x86_64::__m128i, []);<br align="left"/>let mut _12: *const u8;<br align="left"/>let mut _13: &amp;ReErased [u8];<br align="left"/>let mut _14: &amp;ReErased [u8];<br align="left"/>let _15: &amp;ReErased [u8];<br align="left"/>let _16: &amp;ReErased [u8];<br align="left"/>let mut _17: &amp;ReErased [u8];<br align="left"/>let mut _18: Adt(std::ops::RangeFrom, [usize]);<br align="left"/>debug a =&gt; _1;<br align="left"/>debug r =&gt; _10;<br align="left"/>>;
    bb0__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = const true<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;'_ (*(*_1))<br/></td></tr><tr><td align="left">_7 = core::slice::&lt;impl [u8]&gt;::len(move _8)</td></tr></table>>];
    bb2__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_6 = Ge(move _7, const 16_usize)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb3__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_5 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_9)<br/></td></tr><tr><td align="left">_9 = core::panicking::panic(const &quot;assertion failed: a.len() &gt;= 16&quot;)</td></tr></table>>];
    bb5__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_3 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;'_ (*(*_1))<br/></td></tr><tr><td align="left">_12 = core::slice::&lt;impl [u8]&gt;::as_ptr(move _13)</td></tr></table>>];
    bb7__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_11 = move _12 as *const std::arch::x86_64::__m128i (PtrToPtr)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = std::arch::x86_64::_mm_loadu_si128(move _11)</td></tr></table>>];
    bb8__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>FakeRead(ForLet(None), _10)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;'_ (*(*_1))<br/>StorageLive(_18)<br/>_18 = std::ops::RangeFrom::&lt;usize&gt; { start: const 16_usize }<br/></td></tr><tr><td align="left">_16 = &lt;[u8] as std::ops::Index&lt;std::ops::RangeFrom&lt;usize&gt;&gt;&gt;::index(move _17, move _18)</td></tr></table>>];
    bb9__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>_15 = &amp;'_ (*_16)<br/>_14 = &amp;'_ (*_15)<br/>(*_1) = move _14<br/>StorageDead(_14)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>_0 = _10<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb10__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_79 -> bb5__0_79 [label="0"];
    bb0__0_79 -> bb1__0_79 [label="otherwise"];
    bb1__0_79 -> bb2__0_79 [label="return"];
    bb1__0_79 -> bb10__0_79 [label="unwind"];
    bb2__0_79 -> bb4__0_79 [label="0"];
    bb2__0_79 -> bb3__0_79 [label="otherwise"];
    bb3__0_79 -> bb6__0_79 [label=""];
    bb4__0_79 -> bb10__0_79 [label="unwind"];
    bb5__0_79 -> bb6__0_79 [label=""];
    bb6__0_79 -> bb7__0_79 [label="return"];
    bb6__0_79 -> bb10__0_79 [label="unwind"];
    bb7__0_79 -> bb8__0_79 [label="return"];
    bb7__0_79 -> bb10__0_79 [label="unwind"];
    bb8__0_79 -> bb9__0_79 [label="return"];
    bb8__0_79 -> bb10__0_79 [label="unwind"];
}
