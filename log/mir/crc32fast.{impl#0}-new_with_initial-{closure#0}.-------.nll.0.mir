// MIR for `<impl at src/lib.rs:61:1: 61:12>::new_with_initial::{closure#0}` 0 nll

| Free Region Mapping
| '?0 | Global | ['?0, '?2, '?1]
| '?1 | External | ['?2, '?1]
| '?2 | Local | ['?2]
|
| Inferred Region Values
| '?0 | U0 | {bb0[0..=2], bb1[0..=1], bb2[0], '?0, '?1, '?2}
| '?1 | U0 | {bb0[0..=2], bb1[0..=1], bb2[0], '?1}
| '?2 | U0 | {bb0[0..=2], bb1[0..=1], bb2[0], '?2}
| '?3 | U0 | {bb0[1]}
| '?4 | U0 | {bb0[0..=2], bb1[0..=1], bb2[0], '?1}
| '?5 | U0 | {bb0[0..=2], bb1[0..=1], bb2[0], '?1}
|
| Inference Constraints
| '?0 live at {bb0[0..=2], bb1[0..=1], bb2[0]}
| '?1 live at {bb0[0..=2], bb1[0..=1], bb2[0]}
| '?2 live at {bb0[0..=2], bb1[0..=1], bb2[0]}
| '?3 live at {bb0[1]}
| '?1: '?4 due to BoringNoLocation at All(src/lib.rs:75:61: 75:97) (src/lib.rs:75:61: 75:97 (#0)
| '?4: '?1 due to BoringNoLocation at All(src/lib.rs:75:61: 75:97) (src/lib.rs:75:61: 75:97 (#0)
| '?4: '?3 due to Boring at Single(bb0[1]) (src/lib.rs:75:92: 75:96 (#0)
| '?4: '?5 due to Boring at Single(bb0[0]) (src/lib.rs:75:92: 75:96 (#0)
| '?5: '?4 due to Boring at Single(bb0[0]) (src/lib.rs:75:92: 75:96 (#0)
|
fn <impl at src/lib.rs:61:1: 61:12>::new_with_initial::{closure#0}(_1: [closure@src/lib.rs:75:61: 75:63]) -> Hasher {
    debug init => (*(_1.0: &'?5 u32));
    let mut _0: Hasher;
    let mut _2: u32;

    bb0: {
        StorageLive(_2);
        _2 = (*(_1.0: &'?3 u32));
        _0 = Hasher::internal_new_baseline(move _2) -> [return: bb1, unwind: bb2];
    }

    bb1: {
        StorageDead(_2);
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
