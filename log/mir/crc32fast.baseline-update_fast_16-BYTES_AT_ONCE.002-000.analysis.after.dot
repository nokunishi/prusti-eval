digraph Mir_0_17 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn baseline::update_fast_16::BYTES_AT_ONCE() -&gt; usize<br align="left"/>let mut _1: (usizebool));<br align="left"/>>;
    bb0__0_17 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_1 = CheckedMul(const 16_usize, const _)<br/></td></tr><tr><td align="left">assert(!move (_1.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const 16_usize, const _)</td></tr></table>>];
    bb1__0_17 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_0 = move (_1.0: usize)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb2__0_17 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">2 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_17 -> bb1__0_17 [label="success"];
    bb0__0_17 -> bb2__0_17 [label="unwind"];
}
