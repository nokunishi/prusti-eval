digraph Mir_0_40 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn Hasher::internal_new_specialized(_1: u32) -&gt; Adt(std::option::Option, [Adt(Hasher, [])])<br align="left"/>let _2: ();<br align="left"/>let mut _3: Adt(std::option::Option, [Adt(specialized::pclmulqdq::State, [])]);<br align="left"/>let mut _4: u32;<br align="left"/>let mut _5: isize;<br align="left"/>let _6: Adt(specialized::pclmulqdq::State, []);<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: Adt(Hasher, []);<br align="left"/>let mut _9: Adt(State, []);<br align="left"/>let mut _10: Adt(specialized::pclmulqdq::State, []);<br align="left"/>debug init =&gt; _1;<br align="left"/>debug state =&gt; _6;<br align="left"/>>;
    bb0__0_40 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = _1<br/></td></tr><tr><td align="left">_3 = specialized::pclmulqdq::State::new(move _4)</td></tr></table>>];
    bb1__0_40 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>FakeRead(ForMatchedPlace(None), _3)<br/>_5 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb2__0_40 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_40 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">falseEdge</td></tr></table>>];
    bb4__0_40 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>_6 = move ((_3 as Some).0: specialized::pclmulqdq::State)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = move _6<br/>_9 = State::Specialized(move _10)<br/>StorageDead(_10)<br/>_8 = Hasher { amount: const 0_u64, state: move _9 }<br/>StorageDead(_9)<br/>_0 = std::option::Option::&lt;Hasher&gt;::Some(move _8)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_40 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_40 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_40 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_2 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_40 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/>_0 = std::option::Option::&lt;Hasher&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_40 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_40 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">return</td></tr></table>>];
    bb11__0_40 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">11 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_40 -> bb1__0_40 [label="return"];
    bb0__0_40 -> bb11__0_40 [label="unwind"];
    bb1__0_40 -> bb3__0_40 [label="1"];
    bb1__0_40 -> bb2__0_40 [label="otherwise"];
    bb2__0_40 -> bb7__0_40 [label=""];
    bb3__0_40 -> bb4__0_40 [label="real"];
    bb3__0_40 -> bb2__0_40 [label="imaginary"];
    bb4__0_40 -> bb9__0_40 [label=""];
    bb6__0_40 -> bb8__0_40 [label=""];
    bb7__0_40 -> bb8__0_40 [label=""];
    bb8__0_40 -> bb10__0_40 [label=""];
    bb9__0_40 -> bb10__0_40 [label=""];
}
