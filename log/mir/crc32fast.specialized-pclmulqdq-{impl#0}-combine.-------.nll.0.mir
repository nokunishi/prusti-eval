// MIR for `specialized::pclmulqdq::<impl at src/specialized/pclmulqdq.rs:11:1: 11:11>::combine` 0 nll

| Free Region Mapping
| '?0 | Global | ['?0, '?2, '?1]
| '?1 | Local | ['?2, '?1]
| '?2 | Local | ['?2]
|
| Inferred Region Values
| '?0 | U0 | {bb0[0..=7], bb1[0..=6], bb2[0], '?0, '?1, '?2}
| '?1 | U0 | {bb0[0..=7], bb1[0..=6], bb2[0], '?1}
| '?2 | U0 | {bb0[0..=7], bb1[0..=6], bb2[0], '?2}
| '?3 | U0 | {bb0[0..=7], bb1[0..=6], bb2[0], '?1}
|
| Inference Constraints
| '?0 live at {bb0[0..=7], bb1[0..=6], bb2[0]}
| '?1 live at {bb0[0..=7], bb1[0..=6], bb2[0]}
| '?2 live at {bb0[0..=7], bb1[0..=6], bb2[0]}
| '?1: '?3 due to BoringNoLocation at All(src/specialized/pclmulqdq.rs:54:20: 54:29) (src/specialized/pclmulqdq.rs:54:20: 54:29 (#0)
| '?3: '?1 due to BoringNoLocation at All(src/specialized/pclmulqdq.rs:54:20: 54:29) (src/specialized/pclmulqdq.rs:54:20: 54:29 (#0)
|
fn specialized::pclmulqdq::<impl at src/specialized/pclmulqdq.rs:11:1: 11:11>::combine(_1: &'?3 mut specialized::pclmulqdq::State, _2: u32, _3: u64) -> () {
    debug self => _1;
    debug other => _2;
    debug amount => _3;
    let mut _0: ();
    let mut _4: u32;
    let mut _5: u32;
    let mut _6: u32;
    let mut _7: u64;

    bb0: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = ((*_1).0: u32);
        StorageLive(_6);
        _6 = _2;
        StorageLive(_7);
        _7 = _3;
        _4 = combine::combine(move _5, move _6, move _7) -> [return: bb1, unwind: bb2];
    }

    bb1: {
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        ((*_1).0: u32) = move _4;
        StorageDead(_4);
        _0 = const ();
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
