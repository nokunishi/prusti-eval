digraph Mir_0_84 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;specialized::pclmulqdq::State as std::clone::Clone&gt;::clone(_1: &amp;'?5 Adt(specialized::pclmulqdq::State, [])) -&gt; Adt(specialized::pclmulqdq::State, [])<br align="left"/>let mut _2: u32;<br align="left"/>let mut _3: &amp;'?6 u32;<br align="left"/>let _4: &amp;'?7 u32;<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;'?3 ((*_1).0: u32)<br/>_3 = &amp;'?4 (*_4)<br/></td></tr><tr><td align="left">_2 = &lt;u32 as std::clone::Clone&gt;::clone(move _3)</td></tr></table>>];
    bb1__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>_0 = specialized::pclmulqdq::State { state: move _2 }<br/>StorageDead(_2)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb2__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">2 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_84 -> bb1__0_84 [label="return"];
    bb0__0_84 -> bb2__0_84 [label="unwind"];
}
