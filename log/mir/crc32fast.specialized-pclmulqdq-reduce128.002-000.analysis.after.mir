// MIR for `specialized::pclmulqdq::reduce128` after analysis

fn specialized::pclmulqdq::reduce128(_1: std::arch::x86_64::__m128i, _2: std::arch::x86_64::__m128i, _3: std::arch::x86_64::__m128i) -> std::arch::x86_64::__m128i {
    debug a => _1;
    debug b => _2;
    debug keys => _3;
    let mut _0: std::arch::x86_64::__m128i;
    let _4: std::arch::x86_64::__m128i;
    let mut _5: std::arch::x86_64::__m128i;
    let mut _6: std::arch::x86_64::__m128i;
    let mut _8: std::arch::x86_64::__m128i;
    let mut _9: std::arch::x86_64::__m128i;
    let mut _10: std::arch::x86_64::__m128i;
    let mut _11: std::arch::x86_64::__m128i;
    let mut _12: std::arch::x86_64::__m128i;
    let mut _13: std::arch::x86_64::__m128i;
    scope 1 {
        debug t1 => _4;
        let _7: std::arch::x86_64::__m128i;
        scope 2 {
            debug t2 => _7;
        }
    }

    bb0: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = _1;
        StorageLive(_6);
        _6 = _3;
        _4 = std::arch::x86_64::_mm_clmulepi64_si128::<0>(move _5, move _6) -> [return: bb1, unwind: bb5];
    }

    bb1: {
        StorageDead(_6);
        StorageDead(_5);
        FakeRead(ForLet(None), _4);
        StorageLive(_7);
        StorageLive(_8);
        _8 = _1;
        StorageLive(_9);
        _9 = _3;
        _7 = std::arch::x86_64::_mm_clmulepi64_si128::<17>(move _8, move _9) -> [return: bb2, unwind: bb5];
    }

    bb2: {
        StorageDead(_9);
        StorageDead(_8);
        FakeRead(ForLet(None), _7);
        StorageLive(_10);
        StorageLive(_11);
        _11 = _2;
        StorageLive(_12);
        _12 = _4;
        _10 = std::arch::x86_64::_mm_xor_si128(move _11, move _12) -> [return: bb3, unwind: bb5];
    }

    bb3: {
        StorageDead(_12);
        StorageDead(_11);
        StorageLive(_13);
        _13 = _7;
        _0 = std::arch::x86_64::_mm_xor_si128(move _10, move _13) -> [return: bb4, unwind: bb5];
    }

    bb4: {
        StorageDead(_13);
        StorageDead(_10);
        StorageDead(_7);
        StorageDead(_4);
        return;
    }

    bb5 (cleanup): {
        resume;
    }
}
