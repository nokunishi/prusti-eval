digraph Mir_0_50 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;Hasher as std::hash::Hasher&gt;::write(_1: &amp;ReErased mut Adt(Hasher, []), _2: &amp;ReErased [u8]) -&gt; ()<br align="left"/>let mut _3: &amp;ReErased mut Adt(Hasher, []);<br align="left"/>let mut _4: &amp;ReErased [u8];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug bytes =&gt; _2;<br align="left"/>>;
    bb0__0_50 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = &amp;'_ mut (*_1)<br/>StorageLive(_4)<br/>_4 = &amp;'_ (*_2)<br/></td></tr><tr><td align="left">_0 = Hasher::update(move _3, move _4)</td></tr></table>>];
    bb1__0_50 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb2__0_50 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">2 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_50 -> bb1__0_50 [label="return"];
    bb0__0_50 -> bb2__0_50 [label="unwind"];
}
