digraph Mir_0_51 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;Hasher as std::hash::Hasher&gt;::finish(_1: &amp;'?4 Adt(Hasher, [])) -&gt; u64<br align="left"/>let mut _2: u32;<br align="left"/>let mut _3: Adt(Hasher, []);<br align="left"/>let mut _4: &amp;'?5 Adt(Hasher, []);<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_51 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;'?3 (*_1)<br/></td></tr><tr><td align="left">_3 = &lt;Hasher as std::clone::Clone&gt;::clone(move _4)</td></tr></table>>];
    bb1__0_51 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">_2 = Hasher::finalize(move _3)</td></tr></table>>];
    bb2__0_51 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">_0 = &lt;u64 as std::convert::From&lt;u32&gt;&gt;::from(move _2)</td></tr></table>>];
    bb3__0_51 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb4__0_51 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">4 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_51 -> bb1__0_51 [label="return"];
    bb0__0_51 -> bb4__0_51 [label="unwind"];
    bb1__0_51 -> bb2__0_51 [label="return"];
    bb1__0_51 -> bb4__0_51 [label="unwind"];
    bb2__0_51 -> bb3__0_51 [label="return"];
    bb2__0_51 -> bb4__0_51 [label="unwind"];
}
