digraph Mir_0_72 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn specialized::pclmulqdq::debug(_1: &amp;'?81 str, _2: Adt(std::arch::x86_64::__m128i, [])) -&gt; Adt(std::arch::x86_64::__m128i, [])<br align="left"/>let mut _3: !;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let _6: [u8; Const { ty: usize, kind: Leaf(0x0000000000000010) }];<br align="left"/>let mut _7: Adt(specialized::pclmulqdq::debug::A, []);<br align="left"/>let mut _8: Adt(std::arch::x86_64::__m128i, []);<br align="left"/>let _9: ();<br align="left"/>let _10: ();<br align="left"/>let mut _11: Adt(std::fmt::Arguments, ['?82]);<br align="left"/>let mut _12: &amp;'?83 [&amp;'?84 str];<br align="left"/>let mut _13: &amp;'?85 [&amp;'?86 str; Const { ty: usize, kind: Leaf(0x0000000000000002) }];<br align="left"/>let _14: &amp;'?87 [&amp;'?88 str; Const { ty: usize, kind: Leaf(0x0000000000000002) }];<br align="left"/>let _15: [&amp;'?89 str; Const { ty: usize, kind: Leaf(0x0000000000000002) }];<br align="left"/>let mut _16: &amp;'?90 [Adt(core::fmt::rt::Argument, ['?91])];<br align="left"/>let mut _17: &amp;'?92 [Adt(core::fmt::rt::Argument, ['?93]); Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let _18: &amp;'?94 [Adt(core::fmt::rt::Argument, ['?95]); Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let _19: [Adt(core::fmt::rt::Argument, ['?96]); Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let mut _20: Adt(core::fmt::rt::Argument, ['?97]);<br align="left"/>let mut _21: &amp;'?98 &amp;'?99 str;<br align="left"/>let _22: &amp;'?100 &amp;'?101 str;<br align="left"/>let mut _23: &amp;'?102 [Adt(core::fmt::rt::Placeholder, [])];<br align="left"/>let mut _24: &amp;'?103 [Adt(core::fmt::rt::Placeholder, []); Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let _25: &amp;'?104 [Adt(core::fmt::rt::Placeholder, []); Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let _26: [Adt(core::fmt::rt::Placeholder, []); Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let mut _27: Adt(core::fmt::rt::Placeholder, []);<br align="left"/>let mut _28: Adt(core::fmt::rt::Alignment, []);<br align="left"/>let mut _29: Adt(core::fmt::rt::Count, []);<br align="left"/>let mut _30: Adt(core::fmt::rt::Count, []);<br align="left"/>let mut _31: Adt(core::fmt::rt::UnsafeArg, []);<br align="left"/>let _32: ();<br align="left"/>let mut _33: Adt(std::slice::Iter, ['?105, u8]);<br align="left"/>let mut _34: Adt(std::slice::Iter, ['?106, u8]);<br align="left"/>let mut _35: &amp;'?107 [u8];<br align="left"/>let mut _36: &amp;'?108 [u8; Const { ty: usize, kind: Leaf(0x0000000000000010) }];<br align="left"/>let mut _37: Adt(std::slice::Iter, ['?109, u8]);<br align="left"/>let mut _38: ();<br align="left"/>let _39: ();<br align="left"/>let mut _40: Adt(std::option::Option, [&amp;'?110 u8]);<br align="left"/>let mut _41: &amp;'?111 mut Adt(std::slice::Iter, ['?112, u8]);<br align="left"/>let mut _42: &amp;'?113 mut Adt(std::slice::Iter, ['?114, u8]);<br align="left"/>let mut _43: isize;<br align="left"/>let mut _44: !;<br align="left"/>let _45: &amp;'?115 u8;<br align="left"/>let _46: ();<br align="left"/>let _47: ();<br align="left"/>let mut _48: Adt(std::fmt::Arguments, ['?116]);<br align="left"/>let mut _49: &amp;'?117 [&amp;'?118 str];<br align="left"/>let mut _50: &amp;'?119 [&amp;'?120 str; Const { ty: usize, kind: Leaf(0x0000000000000002) }];<br align="left"/>let _51: &amp;'?121 [&amp;'?122 str; Const { ty: usize, kind: Leaf(0x0000000000000002) }];<br align="left"/>let _52: [&amp;'?123 str; Const { ty: usize, kind: Leaf(0x0000000000000002) }];<br align="left"/>let mut _53: &amp;'?124 [Adt(core::fmt::rt::Argument, ['?125])];<br align="left"/>let mut _54: &amp;'?126 [Adt(core::fmt::rt::Argument, ['?127]); Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let _55: &amp;'?128 [Adt(core::fmt::rt::Argument, ['?129]); Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let _56: [Adt(core::fmt::rt::Argument, ['?130]); Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let mut _57: Adt(core::fmt::rt::Argument, ['?131]);<br align="left"/>let mut _58: &amp;'?132 &amp;'?133 u8;<br align="left"/>let _59: &amp;'?134 &amp;'?135 u8;<br align="left"/>let mut _60: &amp;'?136 [Adt(core::fmt::rt::Placeholder, [])];<br align="left"/>let mut _61: &amp;'?137 [Adt(core::fmt::rt::Placeholder, []); Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let _62: &amp;'?138 [Adt(core::fmt::rt::Placeholder, []); Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let _63: [Adt(core::fmt::rt::Placeholder, []); Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let mut _64: Adt(core::fmt::rt::Placeholder, []);<br align="left"/>let mut _65: Adt(core::fmt::rt::Alignment, []);<br align="left"/>let mut _66: Adt(core::fmt::rt::Count, []);<br align="left"/>let mut _67: Adt(core::fmt::rt::Count, []);<br align="left"/>let mut _68: Adt(core::fmt::rt::UnsafeArg, []);<br align="left"/>let _69: ();<br align="left"/>let _70: ();<br align="left"/>let mut _71: Adt(std::fmt::Arguments, ['?139]);<br align="left"/>let mut _72: &amp;'?140 [&amp;'?141 str];<br align="left"/>let mut _73: &amp;'?142 [&amp;'?143 str; Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let _74: &amp;'?144 [&amp;'?145 str; Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let _75: [&amp;'?146 str; Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let mut _76: &amp;'?147 [&amp;'?148 str; Const { ty: usize, kind: Leaf(0x0000000000000002) }];<br align="left"/>let mut _77: &amp;'?149 [&amp;'?150 str; Const { ty: usize, kind: Leaf(0x0000000000000001) }];<br align="left"/>let mut _78: &amp;'?151 [&amp;'?152 str; Const { ty: usize, kind: Leaf(0x0000000000000002) }];<br align="left"/>debug s =&gt; _1;<br align="left"/>debug a =&gt; _2;<br align="left"/>debug x =&gt; _6;<br align="left"/>debug iter =&gt; _37;<br align="left"/>debug x =&gt; _45;<br align="left"/>>;
    bb0__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = const false<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _2<br/>_7 = specialized::pclmulqdq::debug::A { a: move _8 }<br/>StorageDead(_8)<br/>_6 = (_7.1: [u8; 16])<br/>FakeRead(ForLet(None), _6)<br/>StorageDead(_7)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_78 = const _<br/>_14 = &amp;'?31 (*_78)<br/>_13 = &amp;'?32 (*_14)<br/>_12 = move _13 as &amp;'?33 [&amp;'?34 str] (PointerCoercion(Unsize))<br/>StorageDead(_13)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;'?35 _1<br/>_21 = &amp;'?36 (*_22)<br/></td></tr><tr><td align="left">_20 = core::fmt::rt::Argument::&lt;'?37&gt;::new_display::&lt;&amp;'?38 str&gt;(move _21)</td></tr></table>>];
    bb2__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_19 = [move _20]<br/>StorageDead(_20)<br/>_18 = &amp;'?40 _19<br/>_17 = &amp;'?41 (*_18)<br/>_16 = move _17 as &amp;'?42 [core::fmt::rt::Argument&lt;'?43&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_17)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_29)<br/>_29 = core::fmt::rt::Count::Implied<br/>StorageLive(_30)<br/>_30 = core::fmt::rt::Count::Is(const 20_usize)<br/></td></tr><tr><td align="left">_27 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _28, const 0_u32, move _29, move _30)</td></tr></table>>];
    bb3__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>_26 = [move _27]<br/>StorageDead(_27)<br/>_25 = &amp;'?44 _26<br/>_24 = &amp;'?45 (*_25)<br/>_23 = move _24 as &amp;'?46 [core::fmt::rt::Placeholder] (PointerCoercion(Unsize))<br/>StorageDead(_24)<br/>StorageLive(_31)<br/></td></tr><tr><td align="left">_31 = core::fmt::rt::UnsafeArg::new()</td></tr></table>>];
    bb4__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">_11 = std::fmt::Arguments::&lt;'?47&gt;::new_v1_formatted(move _12, move _16, move _23, move _31)</td></tr></table>>];
    bb5__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_23)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = std::io::_print(move _11)</td></tr></table>>];
    bb6__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_14)<br/>StorageDead(_10)<br/>_9 = const ()<br/>StorageDead(_9)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = &amp;'?48 _6<br/>_35 = move _36 as &amp;'?49 [u8] (PointerCoercion(Unsize))<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = core::slice::&lt;impl [u8]&gt;::iter(move _35)</td></tr></table>>];
    bb7__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::slice::Iter&lt;'?50, u8&gt; as std::iter::IntoIterator&gt;::into_iter(move _34)</td></tr></table>>];
    bb8__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>FakeRead(ForMatchedPlace(None), _33)<br/>StorageLive(_37)<br/>_37 = move _33<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">falseUnwind</td></tr></table>>];
    bb10__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;'?51 mut _37<br/>_41 = &amp;'?52 mut (*_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::slice::Iter&lt;'?53, u8&gt; as std::iter::Iterator&gt;::next(move _41)</td></tr></table>>];
    bb11__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>FakeRead(ForMatchedPlace(None), _40)<br/>_43 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb12__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">falseEdge</td></tr></table>>];
    bb13__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_40 as Some).0: &amp;'?54 u8)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_76 = const _<br/>_51 = &amp;'?57 (*_76)<br/>_50 = &amp;'?58 (*_51)<br/>_49 = move _50 as &amp;'?59 [&amp;'?60 str] (PointerCoercion(Unsize))<br/>StorageDead(_50)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;'?61 _45<br/>_58 = &amp;'?62 (*_59)<br/></td></tr><tr><td align="left">_57 = core::fmt::rt::Argument::&lt;'?63&gt;::new_lower_hex::&lt;&amp;'?64 u8&gt;(move _58)</td></tr></table>>];
    bb14__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb15__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_32 = const ()<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_77 = const _<br/>_74 = &amp;'?67 (*_77)<br/>_73 = &amp;'?68 (*_74)<br/>_72 = move _73 as &amp;'?69 [&amp;'?70 str] (PointerCoercion(Unsize))<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_71 = std::fmt::Arguments::&lt;'?71&gt;::new_const(move _72)</td></tr></table>>];
    bb16__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_56 = [move _57]<br/>StorageDead(_57)<br/>_55 = &amp;'?73 _56<br/>_54 = &amp;'?74 (*_55)<br/>_53 = move _54 as &amp;'?75 [core::fmt::rt::Argument&lt;'?76&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_54)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_66)<br/>_66 = core::fmt::rt::Count::Implied<br/>StorageLive(_67)<br/>_67 = core::fmt::rt::Count::Is(const 2_usize)<br/></td></tr><tr><td align="left">_64 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _65, const 8_u32, move _66, move _67)</td></tr></table>>];
    bb17__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>_63 = [move _64]<br/>StorageDead(_64)<br/>_62 = &amp;'?77 _63<br/>_61 = &amp;'?78 (*_62)<br/>_60 = move _61 as &amp;'?79 [core::fmt::rt::Placeholder] (PointerCoercion(Unsize))<br/>StorageDead(_61)<br/>StorageLive(_68)<br/></td></tr><tr><td align="left">_68 = core::fmt::rt::UnsafeArg::new()</td></tr></table>>];
    bb18__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">_48 = std::fmt::Arguments::&lt;'?80&gt;::new_v1_formatted(move _49, move _53, move _60, move _68)</td></tr></table>>];
    bb19__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_60)<br/>StorageDead(_53)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = std::io::_print(move _48)</td></tr></table>>];
    bb20__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageDead(_47)<br/>_46 = const ()<br/>StorageDead(_46)<br/>_39 = const ()<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>_38 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">_70 = std::io::_print(move _71)</td></tr></table>>];
    bb22__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_74)<br/>StorageDead(_70)<br/>_69 = const ()<br/>StorageDead(_69)<br/>_4 = const ()<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_4 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>_0 = _2<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb25__0_72 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_72 -> bb23__0_72 [label="0"];
    bb0__0_72 -> bb1__0_72 [label="otherwise"];
    bb1__0_72 -> bb2__0_72 [label="return"];
    bb1__0_72 -> bb25__0_72 [label="unwind"];
    bb2__0_72 -> bb3__0_72 [label="return"];
    bb2__0_72 -> bb25__0_72 [label="unwind"];
    bb3__0_72 -> bb4__0_72 [label="return"];
    bb3__0_72 -> bb25__0_72 [label="unwind"];
    bb4__0_72 -> bb5__0_72 [label="return"];
    bb4__0_72 -> bb25__0_72 [label="unwind"];
    bb5__0_72 -> bb6__0_72 [label="return"];
    bb5__0_72 -> bb25__0_72 [label="unwind"];
    bb6__0_72 -> bb7__0_72 [label="return"];
    bb6__0_72 -> bb25__0_72 [label="unwind"];
    bb7__0_72 -> bb8__0_72 [label="return"];
    bb7__0_72 -> bb25__0_72 [label="unwind"];
    bb8__0_72 -> bb9__0_72 [label=""];
    bb9__0_72 -> bb10__0_72 [label="real"];
    bb9__0_72 -> bb25__0_72 [label="unwind"];
    bb10__0_72 -> bb11__0_72 [label="return"];
    bb10__0_72 -> bb25__0_72 [label="unwind"];
    bb11__0_72 -> bb12__0_72 [label="0"];
    bb11__0_72 -> bb13__0_72 [label="1"];
    bb11__0_72 -> bb14__0_72 [label="otherwise"];
    bb12__0_72 -> bb15__0_72 [label="real"];
    bb12__0_72 -> bb13__0_72 [label="imaginary"];
    bb13__0_72 -> bb16__0_72 [label="return"];
    bb13__0_72 -> bb25__0_72 [label="unwind"];
    bb15__0_72 -> bb21__0_72 [label="return"];
    bb15__0_72 -> bb25__0_72 [label="unwind"];
    bb16__0_72 -> bb17__0_72 [label="return"];
    bb16__0_72 -> bb25__0_72 [label="unwind"];
    bb17__0_72 -> bb18__0_72 [label="return"];
    bb17__0_72 -> bb25__0_72 [label="unwind"];
    bb18__0_72 -> bb19__0_72 [label="return"];
    bb18__0_72 -> bb25__0_72 [label="unwind"];
    bb19__0_72 -> bb20__0_72 [label="return"];
    bb19__0_72 -> bb25__0_72 [label="unwind"];
    bb20__0_72 -> bb9__0_72 [label=""];
    bb21__0_72 -> bb22__0_72 [label="return"];
    bb21__0_72 -> bb25__0_72 [label="unwind"];
    bb22__0_72 -> bb24__0_72 [label=""];
    bb23__0_72 -> bb24__0_72 [label=""];
}
