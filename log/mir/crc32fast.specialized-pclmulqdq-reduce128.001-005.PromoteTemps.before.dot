digraph Mir_0_78 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn specialized::pclmulqdq::reduce128(_1: Adt(std::arch::x86_64::__m128i, []), _2: Adt(std::arch::x86_64::__m128i, []), _3: Adt(std::arch::x86_64::__m128i, [])) -&gt; Adt(std::arch::x86_64::__m128i, [])<br align="left"/>let _4: Adt(std::arch::x86_64::__m128i, []);<br align="left"/>let mut _5: Adt(std::arch::x86_64::__m128i, []);<br align="left"/>let mut _6: Adt(std::arch::x86_64::__m128i, []);<br align="left"/>let _7: Adt(std::arch::x86_64::__m128i, []);<br align="left"/>let mut _8: Adt(std::arch::x86_64::__m128i, []);<br align="left"/>let mut _9: Adt(std::arch::x86_64::__m128i, []);<br align="left"/>let mut _10: Adt(std::arch::x86_64::__m128i, []);<br align="left"/>let mut _11: Adt(std::arch::x86_64::__m128i, []);<br align="left"/>let mut _12: Adt(std::arch::x86_64::__m128i, []);<br align="left"/>let mut _13: Adt(std::arch::x86_64::__m128i, []);<br align="left"/>debug a =&gt; _1;<br align="left"/>debug b =&gt; _2;<br align="left"/>debug keys =&gt; _3;<br align="left"/>debug t1 =&gt; _4;<br align="left"/>debug t2 =&gt; _7;<br align="left"/>>;
    bb0__0_78 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _1<br/>StorageLive(_6)<br/>_6 = _3<br/></td></tr><tr><td align="left">_4 = std::arch::x86_64::_mm_clmulepi64_si128::&lt;0&gt;(move _5, move _6)</td></tr></table>>];
    bb1__0_78 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>FakeRead(ForLet(None), _4)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _1<br/>StorageLive(_9)<br/>_9 = _3<br/></td></tr><tr><td align="left">_7 = std::arch::x86_64::_mm_clmulepi64_si128::&lt;17&gt;(move _8, move _9)</td></tr></table>>];
    bb2__0_78 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>FakeRead(ForLet(None), _7)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _2<br/>StorageLive(_12)<br/>_12 = _4<br/></td></tr><tr><td align="left">_10 = std::arch::x86_64::_mm_xor_si128(move _11, move _12)</td></tr></table>>];
    bb3__0_78 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_13)<br/>_13 = _7<br/></td></tr><tr><td align="left">_0 = std::arch::x86_64::_mm_xor_si128(move _10, move _13)</td></tr></table>>];
    bb4__0_78 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb5__0_78 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">5 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_78 -> bb1__0_78 [label="return"];
    bb0__0_78 -> bb5__0_78 [label="unwind"];
    bb1__0_78 -> bb2__0_78 [label="return"];
    bb1__0_78 -> bb5__0_78 [label="unwind"];
    bb2__0_78 -> bb3__0_78 [label="return"];
    bb2__0_78 -> bb5__0_78 [label="unwind"];
    bb3__0_78 -> bb4__0_78 [label="return"];
    bb3__0_78 -> bb5__0_78 [label="unwind"];
}
