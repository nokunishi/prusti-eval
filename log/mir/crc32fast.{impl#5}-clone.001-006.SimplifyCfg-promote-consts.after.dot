digraph Mir_0_98 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;Hasher as std::clone::Clone&gt;::clone(_1: &amp;ReErased Adt(Hasher, [])) -&gt; Adt(Hasher, [])<br align="left"/>let mut _2: u64;<br align="left"/>let mut _3: &amp;ReErased u64;<br align="left"/>let _4: &amp;ReErased u64;<br align="left"/>let mut _5: Adt(State, []);<br align="left"/>let mut _6: &amp;ReErased Adt(State, []);<br align="left"/>let _7: &amp;ReErased Adt(State, []);<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_98 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;'_ ((*_1).0: u64)<br/>_3 = &amp;'_ (*_4)<br/></td></tr><tr><td align="left">_2 = &lt;u64 as std::clone::Clone&gt;::clone(move _3)</td></tr></table>>];
    bb1__0_98 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;'_ ((*_1).1: State)<br/>_6 = &amp;'_ (*_7)<br/></td></tr><tr><td align="left">_5 = &lt;State as std::clone::Clone&gt;::clone(move _6)</td></tr></table>>];
    bb2__0_98 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_0 = Hasher { amount: move _2, state: move _5 }<br/>StorageDead(_5)<br/>StorageDead(_2)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb3__0_98 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">3 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_98 -> bb1__0_98 [label="return"];
    bb0__0_98 -> bb3__0_98 [label="unwind"];
    bb1__0_98 -> bb2__0_98 [label="return"];
    bb1__0_98 -> bb3__0_98 [label="unwind"];
}
