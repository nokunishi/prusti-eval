// MIR for `specialized::pclmulqdq::<impl at src/specialized/pclmulqdq.rs:11:1: 11:11>::new` before PromoteTemps

fn specialized::pclmulqdq::<impl at src/specialized/pclmulqdq.rs:11:1: 11:11>::new(_1: u32) -> std::option::Option<specialized::pclmulqdq::State> {
    debug state => _1;
    let mut _0: std::option::Option<specialized::pclmulqdq::State>;
    let mut _2: bool;
    let mut _3: bool;
    let mut _4: bool;
    let mut _5: bool;
    let mut _6: bool;
    let mut _7: bool;
    let mut _8: specialized::pclmulqdq::State;
    let mut _9: u32;

    bb0: {
        StorageLive(_2);
        _2 = const false;
        switchInt(move _2) -> [0: bb1, otherwise: bb3];
    }

    bb1: {
        StorageLive(_3);
        _3 = std_detect::detect::arch::x86::__is_feature_detected::pclmulqdq() -> [return: bb2, unwind: bb12];
    }

    bb2: {
        switchInt(move _3) -> [0: bb10, otherwise: bb3];
    }

    bb3: {
        StorageLive(_4);
        _4 = const true;
        switchInt(move _4) -> [0: bb4, otherwise: bb6];
    }

    bb4: {
        StorageLive(_5);
        _5 = std_detect::detect::arch::x86::__is_feature_detected::sse2() -> [return: bb5, unwind: bb12];
    }

    bb5: {
        switchInt(move _5) -> [0: bb10, otherwise: bb6];
    }

    bb6: {
        StorageLive(_6);
        _6 = const false;
        switchInt(move _6) -> [0: bb7, otherwise: bb9];
    }

    bb7: {
        StorageLive(_7);
        _7 = std_detect::detect::arch::x86::__is_feature_detected::sse4_1() -> [return: bb8, unwind: bb12];
    }

    bb8: {
        switchInt(move _7) -> [0: bb10, otherwise: bb9];
    }

    bb9: {
        StorageLive(_8);
        StorageLive(_9);
        _9 = _1;
        _8 = specialized::pclmulqdq::State { state: move _9 };
        StorageDead(_9);
        _0 = std::option::Option::<specialized::pclmulqdq::State>::Some(move _8);
        StorageDead(_8);
        goto -> bb11;
    }

    bb10: {
        _0 = std::option::Option::<specialized::pclmulqdq::State>::None;
        goto -> bb11;
    }

    bb11: {
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        return;
    }

    bb12 (cleanup): {
        resume;
    }
}
