// MIR for `specialized::pclmulqdq::calculate` 0 renumber

fn specialized::pclmulqdq::calculate(_1: u32, _2: &'?31 [u8]) -> u32 {
    debug crc => _1;
    debug data => _2;
    let mut _0: u32;
    let _3: ();
    let mut _4: bool;
    let mut _5: usize;
    let mut _6: &'?32 [u8];
    let mut _7: !;
    let mut _8: u32;
    let mut _9: &'?33 [u8];
    let mut _10: std::arch::x86_64::__m128i;
    let mut _11: &'?34 mut &'?35 [u8];
    let mut _12: &'?36 mut &'?37 [u8];
    let mut _14: &'?38 mut &'?39 [u8];
    let mut _15: &'?40 mut &'?41 [u8];
    let mut _17: &'?42 mut &'?43 [u8];
    let mut _18: &'?44 mut &'?45 [u8];
    let mut _20: &'?46 mut &'?47 [u8];
    let mut _21: &'?48 mut &'?49 [u8];
    let mut _22: std::arch::x86_64::__m128i;
    let mut _23: std::arch::x86_64::__m128i;
    let mut _24: std::arch::x86_64::__m128i;
    let mut _25: i32;
    let mut _26: u32;
    let mut _27: u32;
    let _29: ();
    let mut _30: ();
    let mut _31: bool;
    let mut _32: usize;
    let mut _33: &'?50 [u8];
    let mut _34: std::arch::x86_64::__m128i;
    let mut _35: std::arch::x86_64::__m128i;
    let mut _36: std::arch::x86_64::__m128i;
    let mut _37: &'?51 mut &'?52 [u8];
    let mut _38: &'?53 mut &'?54 [u8];
    let mut _39: std::arch::x86_64::__m128i;
    let mut _40: std::arch::x86_64::__m128i;
    let mut _41: std::arch::x86_64::__m128i;
    let mut _42: std::arch::x86_64::__m128i;
    let mut _43: &'?55 mut &'?56 [u8];
    let mut _44: &'?57 mut &'?58 [u8];
    let mut _45: std::arch::x86_64::__m128i;
    let mut _46: std::arch::x86_64::__m128i;
    let mut _47: std::arch::x86_64::__m128i;
    let mut _48: std::arch::x86_64::__m128i;
    let mut _49: &'?59 mut &'?60 [u8];
    let mut _50: &'?61 mut &'?62 [u8];
    let mut _51: std::arch::x86_64::__m128i;
    let mut _52: std::arch::x86_64::__m128i;
    let mut _53: std::arch::x86_64::__m128i;
    let mut _54: std::arch::x86_64::__m128i;
    let mut _55: &'?63 mut &'?64 [u8];
    let mut _56: &'?65 mut &'?66 [u8];
    let mut _57: std::arch::x86_64::__m128i;
    let mut _58: !;
    let _59: ();
    let mut _60: !;
    let mut _63: std::arch::x86_64::__m128i;
    let mut _64: std::arch::x86_64::__m128i;
    let mut _65: std::arch::x86_64::__m128i;
    let mut _66: std::arch::x86_64::__m128i;
    let mut _67: std::arch::x86_64::__m128i;
    let mut _68: std::arch::x86_64::__m128i;
    let mut _69: std::arch::x86_64::__m128i;
    let mut _70: std::arch::x86_64::__m128i;
    let mut _71: std::arch::x86_64::__m128i;
    let mut _72: std::arch::x86_64::__m128i;
    let mut _73: std::arch::x86_64::__m128i;
    let _74: ();
    let mut _75: bool;
    let mut _76: usize;
    let mut _77: &'?67 [u8];
    let mut _78: std::arch::x86_64::__m128i;
    let mut _79: std::arch::x86_64::__m128i;
    let mut _80: std::arch::x86_64::__m128i;
    let mut _81: &'?68 mut &'?69 [u8];
    let mut _82: &'?70 mut &'?71 [u8];
    let mut _83: std::arch::x86_64::__m128i;
    let mut _84: !;
    let _85: ();
    let mut _86: !;
    let _87: std::arch::x86_64::__m128i;
    let mut _88: &'?72 str;
    let _89: &'?73 str;
    let mut _90: std::arch::x86_64::__m128i;
    let _91: ();
    let mut _93: std::arch::x86_64::__m128i;
    let mut _94: std::arch::x86_64::__m128i;
    let mut _95: std::arch::x86_64::__m128i;
    let mut _96: std::arch::x86_64::__m128i;
    let mut _97: std::arch::x86_64::__m128i;
    let mut _99: std::arch::x86_64::__m128i;
    let mut _100: std::arch::x86_64::__m128i;
    let mut _101: std::arch::x86_64::__m128i;
    let mut _102: std::arch::x86_64::__m128i;
    let mut _103: i32;
    let mut _104: std::arch::x86_64::__m128i;
    let mut _105: std::arch::x86_64::__m128i;
    let mut _106: std::arch::x86_64::__m128i;
    let _107: std::arch::x86_64::__m128i;
    let mut _108: &'?74 str;
    let _109: &'?75 str;
    let mut _110: std::arch::x86_64::__m128i;
    let mut _113: std::arch::x86_64::__m128i;
    let mut _114: std::arch::x86_64::__m128i;
    let mut _115: std::arch::x86_64::__m128i;
    let mut _116: i32;
    let mut _117: std::arch::x86_64::__m128i;
    let mut _119: std::arch::x86_64::__m128i;
    let mut _120: std::arch::x86_64::__m128i;
    let mut _121: std::arch::x86_64::__m128i;
    let mut _122: i32;
    let mut _123: std::arch::x86_64::__m128i;
    let mut _125: i32;
    let mut _126: std::arch::x86_64::__m128i;
    let mut _127: std::arch::x86_64::__m128i;
    let mut _128: std::arch::x86_64::__m128i;
    let mut _129: bool;
    let mut _130: &'?76 [u8];
    let mut _131: u32;
    let mut _132: u32;
    let mut _133: &'?77 [u8];
    let mut _134: u32;
    scope 1 {
        debug x3 => _10;
        let mut _13: std::arch::x86_64::__m128i;
        scope 2 {
            debug x2 => _13;
            let mut _16: std::arch::x86_64::__m128i;
            scope 3 {
                debug x1 => _16;
                let mut _19: std::arch::x86_64::__m128i;
                scope 4 {
                    debug x0 => _19;
                    let _28: std::arch::x86_64::__m128i;
                    scope 5 {
                        debug k1k2 => _28;
                        let _61: std::arch::x86_64::__m128i;
                        scope 6 {
                            debug k3k4 => _61;
                            let mut _62: std::arch::x86_64::__m128i;
                            scope 7 {
                                debug x => _62;
                                let _92: std::arch::x86_64::__m128i;
                                scope 8 {
                                    debug x => _92;
                                    let _98: std::arch::x86_64::__m128i;
                                    scope 9 {
                                        debug x => _98;
                                        let _111: std::arch::x86_64::__m128i;
                                        scope 10 {
                                            debug pu => _111;
                                            let _112: std::arch::x86_64::__m128i;
                                            scope 11 {
                                                debug t1 => _112;
                                                let _118: std::arch::x86_64::__m128i;
                                                scope 12 {
                                                    debug t2 => _118;
                                                    let _124: u32;
                                                    scope 13 {
                                                        debug c => _124;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = &'?3 (*_2);
        _5 = core::slice::<impl [u8]>::len(move _6) -> [return: bb1, unwind: bb63];
    }

    bb1: {
        StorageDead(_6);
        _4 = Lt(move _5, const 128_usize);
        switchInt(move _4) -> [0: bb4, otherwise: bb2];
    }

    bb2: {
        StorageDead(_5);
        StorageLive(_8);
        _8 = _1;
        StorageLive(_9);
        _9 = &'?4 (*_2);
        _0 = baseline::update_fast_16(move _8, move _9) -> [return: bb3, unwind: bb63];
    }

    bb3: {
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_4);
        StorageDead(_3);
        goto -> bb62;
    }

    bb4: {
        StorageDead(_5);
        _3 = const ();
        StorageDead(_4);
        StorageDead(_3);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        _12 = &'?5 mut _2;
        _11 = &'?6 mut (*_12);
        _10 = specialized::pclmulqdq::get(move _11) -> [return: bb5, unwind: bb63];
    }

    bb5: {
        StorageDead(_11);
        FakeRead(ForLet(None), _10);
        StorageDead(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        _15 = &'?7 mut _2;
        _14 = &'?8 mut (*_15);
        _13 = specialized::pclmulqdq::get(move _14) -> [return: bb6, unwind: bb63];
    }

    bb6: {
        StorageDead(_14);
        FakeRead(ForLet(None), _13);
        StorageDead(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        _18 = &'?9 mut _2;
        _17 = &'?10 mut (*_18);
        _16 = specialized::pclmulqdq::get(move _17) -> [return: bb7, unwind: bb63];
    }

    bb7: {
        StorageDead(_17);
        FakeRead(ForLet(None), _16);
        StorageDead(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        _21 = &'?11 mut _2;
        _20 = &'?12 mut (*_21);
        _19 = specialized::pclmulqdq::get(move _20) -> [return: bb8, unwind: bb63];
    }

    bb8: {
        StorageDead(_20);
        FakeRead(ForLet(None), _19);
        StorageDead(_21);
        StorageLive(_22);
        StorageLive(_23);
        _23 = _10;
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        _27 = _1;
        _26 = Not(move _27);
        StorageDead(_27);
        _25 = move _26 as i32 (IntToInt);
        StorageDead(_26);
        _24 = std::arch::x86_64::_mm_cvtsi32_si128(move _25) -> [return: bb9, unwind: bb63];
    }

    bb9: {
        StorageDead(_25);
        _22 = std::arch::x86_64::_mm_xor_si128(move _23, move _24) -> [return: bb10, unwind: bb63];
    }

    bb10: {
        StorageDead(_24);
        StorageDead(_23);
        _10 = move _22;
        StorageDead(_22);
        StorageLive(_28);
        _28 = std::arch::x86_64::_mm_set_epi64x(const _, const _) -> [return: bb11, unwind: bb63];
    }

    bb11: {
        FakeRead(ForLet(None), _28);
        StorageLive(_29);
        goto -> bb12;
    }

    bb12: {
        falseUnwind -> [real: bb13, unwind: bb63];
    }

    bb13: {
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        _33 = &'?13 (*_2);
        _32 = core::slice::<impl [u8]>::len(move _33) -> [return: bb14, unwind: bb63];
    }

    bb14: {
        StorageDead(_33);
        _31 = Ge(move _32, const 64_usize);
        switchInt(move _31) -> [0: bb24, otherwise: bb15];
    }

    bb15: {
        StorageDead(_32);
        StorageLive(_34);
        StorageLive(_35);
        _35 = _10;
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        _38 = &'?14 mut _2;
        _37 = &'?15 mut (*_38);
        _36 = specialized::pclmulqdq::get(move _37) -> [return: bb16, unwind: bb63];
    }

    bb16: {
        StorageDead(_37);
        StorageLive(_39);
        _39 = _28;
        _34 = specialized::pclmulqdq::reduce128(move _35, move _36, move _39) -> [return: bb17, unwind: bb63];
    }

    bb17: {
        StorageDead(_39);
        StorageDead(_36);
        StorageDead(_35);
        _10 = move _34;
        StorageDead(_34);
        StorageDead(_38);
        StorageLive(_40);
        StorageLive(_41);
        _41 = _13;
        StorageLive(_42);
        StorageLive(_43);
        StorageLive(_44);
        _44 = &'?16 mut _2;
        _43 = &'?17 mut (*_44);
        _42 = specialized::pclmulqdq::get(move _43) -> [return: bb18, unwind: bb63];
    }

    bb18: {
        StorageDead(_43);
        StorageLive(_45);
        _45 = _28;
        _40 = specialized::pclmulqdq::reduce128(move _41, move _42, move _45) -> [return: bb19, unwind: bb63];
    }

    bb19: {
        StorageDead(_45);
        StorageDead(_42);
        StorageDead(_41);
        _13 = move _40;
        StorageDead(_40);
        StorageDead(_44);
        StorageLive(_46);
        StorageLive(_47);
        _47 = _16;
        StorageLive(_48);
        StorageLive(_49);
        StorageLive(_50);
        _50 = &'?18 mut _2;
        _49 = &'?19 mut (*_50);
        _48 = specialized::pclmulqdq::get(move _49) -> [return: bb20, unwind: bb63];
    }

    bb20: {
        StorageDead(_49);
        StorageLive(_51);
        _51 = _28;
        _46 = specialized::pclmulqdq::reduce128(move _47, move _48, move _51) -> [return: bb21, unwind: bb63];
    }

    bb21: {
        StorageDead(_51);
        StorageDead(_48);
        StorageDead(_47);
        _16 = move _46;
        StorageDead(_46);
        StorageDead(_50);
        StorageLive(_52);
        StorageLive(_53);
        _53 = _19;
        StorageLive(_54);
        StorageLive(_55);
        StorageLive(_56);
        _56 = &'?20 mut _2;
        _55 = &'?21 mut (*_56);
        _54 = specialized::pclmulqdq::get(move _55) -> [return: bb22, unwind: bb63];
    }

    bb22: {
        StorageDead(_55);
        StorageLive(_57);
        _57 = _28;
        _52 = specialized::pclmulqdq::reduce128(move _53, move _54, move _57) -> [return: bb23, unwind: bb63];
    }

    bb23: {
        StorageDead(_57);
        StorageDead(_54);
        StorageDead(_53);
        _19 = move _52;
        StorageDead(_52);
        StorageDead(_56);
        _30 = const ();
        StorageDead(_31);
        goto -> bb12;
    }

    bb24: {
        StorageDead(_32);
        StorageLive(_59);
        _29 = const ();
        StorageDead(_59);
        StorageDead(_31);
        StorageDead(_29);
        StorageLive(_61);
        _61 = std::arch::x86_64::_mm_set_epi64x(const _, const _) -> [return: bb25, unwind: bb63];
    }

    bb25: {
        FakeRead(ForLet(None), _61);
        StorageLive(_62);
        StorageLive(_63);
        _63 = _10;
        StorageLive(_64);
        _64 = _13;
        StorageLive(_65);
        _65 = _61;
        _62 = specialized::pclmulqdq::reduce128(move _63, move _64, move _65) -> [return: bb26, unwind: bb63];
    }

    bb26: {
        StorageDead(_65);
        StorageDead(_64);
        StorageDead(_63);
        FakeRead(ForLet(None), _62);
        StorageLive(_66);
        StorageLive(_67);
        _67 = _62;
        StorageLive(_68);
        _68 = _16;
        StorageLive(_69);
        _69 = _61;
        _66 = specialized::pclmulqdq::reduce128(move _67, move _68, move _69) -> [return: bb27, unwind: bb63];
    }

    bb27: {
        StorageDead(_69);
        StorageDead(_68);
        StorageDead(_67);
        _62 = move _66;
        StorageDead(_66);
        StorageLive(_70);
        StorageLive(_71);
        _71 = _62;
        StorageLive(_72);
        _72 = _19;
        StorageLive(_73);
        _73 = _61;
        _70 = specialized::pclmulqdq::reduce128(move _71, move _72, move _73) -> [return: bb28, unwind: bb63];
    }

    bb28: {
        StorageDead(_73);
        StorageDead(_72);
        StorageDead(_71);
        _62 = move _70;
        StorageDead(_70);
        StorageLive(_74);
        goto -> bb29;
    }

    bb29: {
        falseUnwind -> [real: bb30, unwind: bb63];
    }

    bb30: {
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        _77 = &'?22 (*_2);
        _76 = core::slice::<impl [u8]>::len(move _77) -> [return: bb31, unwind: bb63];
    }

    bb31: {
        StorageDead(_77);
        _75 = Ge(move _76, const 16_usize);
        switchInt(move _75) -> [0: bb35, otherwise: bb32];
    }

    bb32: {
        StorageDead(_76);
        StorageLive(_78);
        StorageLive(_79);
        _79 = _62;
        StorageLive(_80);
        StorageLive(_81);
        StorageLive(_82);
        _82 = &'?23 mut _2;
        _81 = &'?24 mut (*_82);
        _80 = specialized::pclmulqdq::get(move _81) -> [return: bb33, unwind: bb63];
    }

    bb33: {
        StorageDead(_81);
        StorageLive(_83);
        _83 = _61;
        _78 = specialized::pclmulqdq::reduce128(move _79, move _80, move _83) -> [return: bb34, unwind: bb63];
    }

    bb34: {
        StorageDead(_83);
        StorageDead(_80);
        StorageDead(_79);
        _62 = move _78;
        StorageDead(_78);
        StorageDead(_82);
        _30 = const ();
        StorageDead(_75);
        goto -> bb29;
    }

    bb35: {
        StorageDead(_76);
        StorageLive(_85);
        _74 = const ();
        StorageDead(_85);
        StorageDead(_75);
        StorageDead(_74);
        StorageLive(_87);
        StorageLive(_88);
        StorageLive(_89);
        _89 = const "128 > 64 init";
        _88 = &'?26 (*_89);
        StorageLive(_90);
        _90 = _62;
        _87 = specialized::pclmulqdq::debug(move _88, move _90) -> [return: bb36, unwind: bb63];
    }

    bb36: {
        StorageDead(_90);
        StorageDead(_88);
        StorageDead(_89);
        StorageDead(_87);
        StorageLive(_91);
        _91 = std::mem::drop::<i64>(const _) -> [return: bb37, unwind: bb63];
    }

    bb37: {
        StorageDead(_91);
        StorageLive(_92);
        StorageLive(_93);
        StorageLive(_94);
        _94 = _62;
        StorageLive(_95);
        _95 = _61;
        _93 = std::arch::x86_64::_mm_clmulepi64_si128::<16>(move _94, move _95) -> [return: bb38, unwind: bb63];
    }

    bb38: {
        StorageDead(_95);
        StorageDead(_94);
        StorageLive(_96);
        StorageLive(_97);
        _97 = _62;
        _96 = std::arch::x86_64::_mm_srli_si128::<8>(move _97) -> [return: bb39, unwind: bb63];
    }

    bb39: {
        StorageDead(_97);
        _92 = std::arch::x86_64::_mm_xor_si128(move _93, move _96) -> [return: bb40, unwind: bb63];
    }

    bb40: {
        StorageDead(_96);
        StorageDead(_93);
        FakeRead(ForLet(None), _92);
        StorageLive(_98);
        StorageLive(_99);
        StorageLive(_100);
        StorageLive(_101);
        _101 = _92;
        StorageLive(_102);
        StorageLive(_103);
        _103 = Not(const 0_i32);
        _102 = std::arch::x86_64::_mm_set_epi32(const 0_i32, const 0_i32, const 0_i32, move _103) -> [return: bb41, unwind: bb63];
    }

    bb41: {
        StorageDead(_103);
        _100 = std::arch::x86_64::_mm_and_si128(move _101, move _102) -> [return: bb42, unwind: bb63];
    }

    bb42: {
        StorageDead(_102);
        StorageDead(_101);
        StorageLive(_104);
        _104 = std::arch::x86_64::_mm_set_epi64x(const 0_i64, const _) -> [return: bb43, unwind: bb63];
    }

    bb43: {
        _99 = std::arch::x86_64::_mm_clmulepi64_si128::<0>(move _100, move _104) -> [return: bb44, unwind: bb63];
    }

    bb44: {
        StorageDead(_104);
        StorageDead(_100);
        StorageLive(_105);
        StorageLive(_106);
        _106 = _92;
        _105 = std::arch::x86_64::_mm_srli_si128::<4>(move _106) -> [return: bb45, unwind: bb63];
    }

    bb45: {
        StorageDead(_106);
        _98 = std::arch::x86_64::_mm_xor_si128(move _99, move _105) -> [return: bb46, unwind: bb63];
    }

    bb46: {
        StorageDead(_105);
        StorageDead(_99);
        FakeRead(ForLet(None), _98);
        StorageLive(_107);
        StorageLive(_108);
        StorageLive(_109);
        _109 = const "128 > 64 xx";
        _108 = &'?28 (*_109);
        StorageLive(_110);
        _110 = _98;
        _107 = specialized::pclmulqdq::debug(move _108, move _110) -> [return: bb47, unwind: bb63];
    }

    bb47: {
        StorageDead(_110);
        StorageDead(_108);
        StorageDead(_109);
        StorageDead(_107);
        StorageLive(_111);
        _111 = std::arch::x86_64::_mm_set_epi64x(const _, const _) -> [return: bb48, unwind: bb63];
    }

    bb48: {
        FakeRead(ForLet(None), _111);
        StorageLive(_112);
        StorageLive(_113);
        StorageLive(_114);
        _114 = _98;
        StorageLive(_115);
        StorageLive(_116);
        _116 = Not(const 0_i32);
        _115 = std::arch::x86_64::_mm_set_epi32(const 0_i32, const 0_i32, const 0_i32, move _116) -> [return: bb49, unwind: bb63];
    }

    bb49: {
        StorageDead(_116);
        _113 = std::arch::x86_64::_mm_and_si128(move _114, move _115) -> [return: bb50, unwind: bb63];
    }

    bb50: {
        StorageDead(_115);
        StorageDead(_114);
        StorageLive(_117);
        _117 = _111;
        _112 = std::arch::x86_64::_mm_clmulepi64_si128::<16>(move _113, move _117) -> [return: bb51, unwind: bb63];
    }

    bb51: {
        StorageDead(_117);
        StorageDead(_113);
        FakeRead(ForLet(None), _112);
        StorageLive(_118);
        StorageLive(_119);
        StorageLive(_120);
        _120 = _112;
        StorageLive(_121);
        StorageLive(_122);
        _122 = Not(const 0_i32);
        _121 = std::arch::x86_64::_mm_set_epi32(const 0_i32, const 0_i32, const 0_i32, move _122) -> [return: bb52, unwind: bb63];
    }

    bb52: {
        StorageDead(_122);
        _119 = std::arch::x86_64::_mm_and_si128(move _120, move _121) -> [return: bb53, unwind: bb63];
    }

    bb53: {
        StorageDead(_121);
        StorageDead(_120);
        StorageLive(_123);
        _123 = _111;
        _118 = std::arch::x86_64::_mm_clmulepi64_si128::<0>(move _119, move _123) -> [return: bb54, unwind: bb63];
    }

    bb54: {
        StorageDead(_123);
        StorageDead(_119);
        FakeRead(ForLet(None), _118);
        StorageLive(_124);
        StorageLive(_125);
        StorageLive(_126);
        StorageLive(_127);
        _127 = _98;
        StorageLive(_128);
        _128 = _118;
        _126 = std::arch::x86_64::_mm_xor_si128(move _127, move _128) -> [return: bb55, unwind: bb63];
    }

    bb55: {
        StorageDead(_128);
        StorageDead(_127);
        _125 = std::arch::x86_64::_mm_extract_epi32::<1>(move _126) -> [return: bb56, unwind: bb63];
    }

    bb56: {
        StorageDead(_126);
        _124 = move _125 as u32 (IntToInt);
        StorageDead(_125);
        FakeRead(ForLet(None), _124);
        StorageLive(_129);
        StorageLive(_130);
        _130 = &'?29 (*_2);
        _129 = core::slice::<impl [u8]>::is_empty(move _130) -> [return: bb57, unwind: bb63];
    }

    bb57: {
        switchInt(move _129) -> [0: bb59, otherwise: bb58];
    }

    bb58: {
        StorageDead(_130);
        StorageLive(_134);
        _134 = _124;
        _0 = Not(move _134);
        StorageDead(_134);
        goto -> bb61;
    }

    bb59: {
        StorageDead(_130);
        StorageLive(_131);
        StorageLive(_132);
        _132 = _124;
        _131 = Not(move _132);
        StorageDead(_132);
        StorageLive(_133);
        _133 = &'?30 (*_2);
        _0 = baseline::update_fast_16(move _131, move _133) -> [return: bb60, unwind: bb63];
    }

    bb60: {
        StorageDead(_133);
        StorageDead(_131);
        goto -> bb61;
    }

    bb61: {
        StorageDead(_129);
        StorageDead(_124);
        StorageDead(_118);
        StorageDead(_112);
        StorageDead(_111);
        StorageDead(_98);
        StorageDead(_92);
        StorageDead(_62);
        StorageDead(_61);
        StorageDead(_28);
        StorageDead(_19);
        StorageDead(_16);
        StorageDead(_13);
        StorageDead(_10);
        goto -> bb62;
    }

    bb62: {
        return;
    }

    bb63 (cleanup): {
        resume;
    }
}
