warning: unused imports: `BufRead`, `self`
  --> src/main.rs:23:15
   |
23 | use std::io::{self, BufRead};
   |               ^^^^  ^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `x`
  --> src/main.rs:39:7
   |
39 |   let x = Command::new("python3")
   |       ^ help: if this is intentional, prefix it with an underscore: `_x`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: variable `file` is assigned to, but never used
   --> src/main.rs:127:11
    |
127 |   let mut file = String::new();
    |           ^^^^
    |
    = note: consider using `_file` instead

warning: value assigned to `file` is never read
   --> src/main.rs:131:7
    |
131 |       file = arg;
    |       ^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

warning: function `raise_exception` is never used
  --> src/main.rs:29:4
   |
29 | fn raise_exception(file: String) {
   |    ^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: unused `Result` that must be used
  --> src/main.rs:36:3
   |
36 |   env::set_current_dir(&script_dir);
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
36 |   let _ = env::set_current_dir(&script_dir);
   |   +++++++

warning: unused `Result` that must be used
  --> src/main.rs:64:3
   |
64 |   f.write_all(body_with_facts.body.to_string(tcx).unwrap().as_bytes());
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
64 |   let _ = f.write_all(body_with_facts.body.to_string(tcx).unwrap().as_bytes());
   |   +++++++

warning: `flowistry` (bin "flowistry") generated 7 warnings (run `cargo fix --bin "flowistry"` to apply 2 suggestions)
    Finished dev [unoptimized + debuginfo] target(s) in 0.32s
     Running `target/debug/flowistry /tmp/unreachable-1.0.0/src/lib.rs`
error[E0463]: can't find crate for `void`
  --> /tmp/unreachable-1.0.0/src/lib.rs:13:1
   |
13 | extern crate void;
   | ^^^^^^^^^^^^^^^^^^ can't find crate

error: `#[panic_handler]` function required, but not found

error: language item required, but not found: `eh_personality`
  |
  = note: this can occur when a binary crate with `#![no_std]` is compiled for a target where `eh_personality` is defined in the standard library
  = help: you may be able to compile for a target that doesn't need `eh_personality`, specify a target with `--target` or in `.cargo/config`

error: aborting due to 3 previous errors

For more information about this error, try `rustc --explain E0463`.
