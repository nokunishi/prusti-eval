// MIR for `<impl at lib.rs:98:1: 98:20>::from_buffer` after built

fn <impl at lib.rs:98:1: 98:20>::from_buffer(_1: &[u8]) -> RollingAdler32 {
    debug buffer => _1;
    let mut _0: RollingAdler32;
    let mut _2: RollingAdler32;
    let _3: ();
    let mut _4: &mut RollingAdler32;
    let mut _5: &[u8];
    scope 1 {
        debug hash => _2;
    }

    bb0: {
        StorageLive(_2);
        _2 = RollingAdler32::new() -> [return: bb1, unwind: bb3];
    }

    bb1: {
        FakeRead(ForLet(None), _2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &mut _2;
        StorageLive(_5);
        _5 = &(*_1);
        _3 = RollingAdler32::update_buffer(move _4, move _5) -> [return: bb2, unwind: bb3];
    }

    bb2: {
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        _0 = move _2;
        StorageDead(_2);
        return;
    }

    bb3 (cleanup): {
        resume;
    }
}
