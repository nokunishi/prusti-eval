// MIR for `<impl at lib.rs:98:1: 98:20>::hash` after built

fn <impl at lib.rs:98:1: 98:20>::hash(_1: &RollingAdler32) -> u32 {
    debug self => _1;
    let mut _0: u32;
    let mut _2: u32;
    let mut _3: u32;
    let mut _4: u32;
    let mut _5: bool;
    let mut _6: u32;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = ((*_1).1: u32);
        _4 = const 16_i32 as u32 (IntToInt);
        _5 = Lt(move _4, const 32_u32);
        assert(move _5, "attempt to shift left by `{}`, which would overflow", const 16_i32) -> [success: bb1, unwind: bb2];
    }

    bb1: {
        _2 = Shl(move _3, const 16_i32);
        StorageDead(_3);
        StorageLive(_6);
        _6 = ((*_1).0: u32);
        _0 = BitOr(move _2, move _6);
        StorageDead(_6);
        StorageDead(_2);
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
