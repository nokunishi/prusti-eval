fn mod_i3(_1: i32) -> () {
    debug x => _1;
    let mut _0: ();
    let _2: i32;
    let mut _3: i32;
    let mut _4: bool;
    let mut _5: bool;
    let mut _6: bool;
    let mut _7: bool;

    bb0: {
        _3 = _1;
        _4 = Eq(const 2_i32, const 0_i32);
        assert(!move _4, "attempt to calculate the remainder of `{}` with a divisor of zero", _3) -> [success: bb1, unwind: bb3];
    }

    bb1: {
        _5 = Eq(const 2_i32, const -1_i32);
        _6 = Eq(_3, const i32::MIN);
        _7 = BitAnd(move _5, move _6);
        assert(!move _7, "attempt to compute the remainder of `{} % {}`, which would overflow", _3, const 2_i32) -> [success: bb2, unwind: bb3];
    }

    bb2: {
        _2 = Rem(move _3, const 2_i32);
        _0 = const ();
        return;
    }

    bb3 (cleanup): {
        resume;
    }
}
path: ./test/test.rs:58:21: 58:21 (#0)