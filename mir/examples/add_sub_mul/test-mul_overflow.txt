fn mul_overflow() -> () {
    let mut _0: ();
    let mut _1: i32;
    let mut _2: (i32, bool);
    scope 1 {
    }

    bb0: {
        _2 = CheckedMul(const 100_i32, const _);
        assert(!move (_2.1: bool), "attempt to compute `{} * {}`, which would overflow", const 100_i32, const _) -> [success: bb1, unwind: bb2];
    }

    bb1: {
        _1 = move (_2.0: i32);
        PlaceMention(_1);
        _0 = const ();
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
path: ./test/test.rs:35:18: 35:18 (#0)