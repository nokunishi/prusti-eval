fn mul_overflow(_1: &i32) -> () {
    debug x => _1;
    let mut _0: ();
    let mut _2: i32;
    let mut _3: (i32, bool);
    scope 1 {
    }

    bb0: {
        _3 = CheckedMul(const 100_i32, const _);
        assert(!move (_3.1: bool), "attempt to compute `{} * {}`, which would overflow", const 100_i32, const _) -> [success: bb1, unwind: bb2];
    }

    bb1: {
        _2 = move (_3.0: i32);
        PlaceMention(_2);
        _0 = const ();
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
path: ./test/test.rs:24:19: 24:20 (#0)