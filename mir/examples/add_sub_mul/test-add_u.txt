fn add_u(_1: u32, _2: u32) -> () {
    debug x => _1;
    debug y => _2;
    let mut _0: ();
    let mut _3: u32;
    let mut _4: u32;
    let mut _5: u32;
    let mut _6: (u32, bool);
    scope 1 {
    }

    bb0: {
        _4 = _1;
        _5 = _2;
        _6 = CheckedAdd(_4, _5);
        assert(!move (_6.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, move _5) -> [success: bb1, unwind: bb2];
    }

    bb1: {
        _3 = move (_6.0: u32);
        PlaceMention(_3);
        _0 = const ();
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
path: ./add_sub_mul/test.rs:7:23: 7:23 (#0)