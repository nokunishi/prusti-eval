fn index(_1: &i32) -> () {
    debug y => _1;
    let mut _0: ();
    let _2: [i32; 3];
    let _3: usize;
    let mut _4: usize;
    let mut _5: bool;
    scope 1 {
        debug x => _2;
        scope 2 {
        }
    }

    bb0: {
        _2 = [const 2_i32, const 3_i32, const 4_i32];
        FakeRead(ForLet(None), _2);
        _3 = const 9_usize;
        _4 = Len(_2);
        _5 = Lt(_3, _4);
        assert(move _5, "index out of bounds: the length is {} but the index is {}", move _4, _3) -> [success: bb1, unwind: bb2];
    }

    bb1: {
        PlaceMention(_2[_3]);
        _0 = const ();
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
path: ./test/test.rs:1:13: 1:14 (#0)