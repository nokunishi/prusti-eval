fn ls(_1: i32) -> () {
    debug x => _1;
    let mut _0: ();
    let mut _2: i32;
    let mut _3: i32;
    let mut _4: u32;
    let mut _5: bool;
    scope 1 {
    }

    bb0: {
        _3 = _1;
        _4 = const 5_i32 as u32 (IntToInt);
        _5 = Lt(move _4, const 32_u32);
        assert(move _5, "attempt to shift left by `{}`, which would overflow", const 5_i32) -> [success: bb1, unwind: bb2];
    }

    bb1: {
        _2 = Shl(move _3, const 5_i32);
        PlaceMention(_2);
        _0 = const ();
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
path: ./test/test.rs:1:14: 1:14 (#0)